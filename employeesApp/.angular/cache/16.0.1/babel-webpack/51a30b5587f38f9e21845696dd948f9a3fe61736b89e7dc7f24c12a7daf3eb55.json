{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./login/login.service\";\nclass DataServices {\n  constructor(httpClient, loginService) {\n    this.httpClient = httpClient;\n    this.loginService = loginService;\n  }\n  GetEmployees() {\n    const token = this.loginService.getIdToken();\n    return this.httpClient.get('https://my-clients-67552-default-rtdb.firebaseio.com/datos.json?auth=' + token);\n  }\n  saveEmployees(employees) {\n    const token = this.loginService.getIdToken();\n    this.httpClient.put('https://my-clients-67552-default-rtdb.firebaseio.com/datos.json?auth=' + token, employees).subscribe(response => console.log(\"The information was save \" + response), error => console.log(\"Error: \" + error));\n  }\n  UpdateEmployee(indice, employee) {\n    const token = this.loginService.getIdToken();\n    let url = 'https://my-clients-67552-default-rtdb.firebaseio.com/datos/' + indice + '.json?auth=' + token;\n    this.httpClient.put(url, employee).subscribe(response => console.log(\"The information was save \" + response), error => console.log(\"Error: \" + error));\n  }\n  DeleteEmployee(indice) {\n    const token = this.loginService.getIdToken();\n    let url = 'https://my-clients-67552-default-rtdb.firebaseio.com/datos/' + indice + '.json?auth=' + token;\n    this.httpClient.delete(url).subscribe(response => console.log(\"The information was delete \" + response), error => console.log(\"Error: \" + error));\n  }\n}\nDataServices.ɵfac = function DataServices_Factory(t) {\n  return new (t || DataServices)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LoginService));\n};\nDataServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataServices,\n  factory: DataServices.ɵfac\n});\nexport { DataServices };","map":{"version":3,"names":["DataServices","constructor","httpClient","loginService","GetEmployees","token","getIdToken","get","saveEmployees","employees","put","subscribe","response","console","log","error","UpdateEmployee","indice","employee","url","DeleteEmployee","delete","i0","ɵɵinject","i1","HttpClient","i2","LoginService","factory","ɵfac"],"sources":["C:\\Users\\Juan.acevedo\\Desktop\\Cursos\\Angular\\employeesApp\\src\\app\\data.services.ts"],"sourcesContent":["//Vamos ha utilizar firebase -> realtime database\r\n\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Employee } from \"./employee.componet\";\r\nimport { LoginService } from \"./login/login.service\";\r\n\r\n@Injectable()\r\n\r\nexport class DataServices{\r\n\r\n    constructor(private httpClient:HttpClient, private loginService:LoginService) {}\r\n\r\n    \r\n    GetEmployees(){\r\n        const token = this.loginService.getIdToken();\r\n       return this.httpClient.get('https://my-clients-67552-default-rtdb.firebaseio.com/datos.json?auth='+token);\r\n        \r\n    }\r\n\r\n    saveEmployees(employees:Employee[]){\r\n        const token = this.loginService.getIdToken();\r\n        this.httpClient.put('https://my-clients-67552-default-rtdb.firebaseio.com/datos.json?auth='+token, employees).subscribe(\r\n            response=> console.log(\"The information was save \"+ response),\r\n\r\n            error => console.log(\"Error: \" + error),\r\n        );\r\n\r\n    };\r\n\r\n    UpdateEmployee(indice:number,employee:Employee){\r\n        const token = this.loginService.getIdToken();\r\n        let url = 'https://my-clients-67552-default-rtdb.firebaseio.com/datos/' + indice + '.json?auth='+token; \r\n        this.httpClient.put(url, employee).subscribe(\r\n            response=> console.log(\"The information was save \"+ response),\r\n\r\n            error => console.log(\"Error: \" + error),\r\n        );\r\n    }\r\n\r\n    DeleteEmployee(indice:number){\r\n        const token = this.loginService.getIdToken();\r\n        let url = 'https://my-clients-67552-default-rtdb.firebaseio.com/datos/' + indice + '.json?auth='+token; \r\n        this.httpClient.delete(url).subscribe(\r\n            response=> console.log(\"The information was delete \"+ response),\r\n\r\n            error => console.log(\"Error: \" + error),\r\n        );\r\n    }\r\n\r\n    \r\n}"],"mappings":";;;AAOA,MAEaA,YAAY;EAErBC,YAAoBC,UAAqB,EAAUC,YAAyB;IAAxD,KAAAD,UAAU,GAAVA,UAAU;IAAqB,KAAAC,YAAY,GAAZA,YAAY;EAAgB;EAG/EC,YAAYA,CAAA;IACR,MAAMC,KAAK,GAAG,IAAI,CAACF,YAAY,CAACG,UAAU,EAAE;IAC7C,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAC,uEAAuE,GAACF,KAAK,CAAC;EAE5G;EAEAG,aAAaA,CAACC,SAAoB;IAC9B,MAAMJ,KAAK,GAAG,IAAI,CAACF,YAAY,CAACG,UAAU,EAAE;IAC5C,IAAI,CAACJ,UAAU,CAACQ,GAAG,CAAC,uEAAuE,GAACL,KAAK,EAAEI,SAAS,CAAC,CAACE,SAAS,CACnHC,QAAQ,IAAGC,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAEF,QAAQ,CAAC,EAE7DG,KAAK,IAAIF,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,KAAK,CAAC,CAC1C;EAEL;EAEAC,cAAcA,CAACC,MAAa,EAACC,QAAiB;IAC1C,MAAMb,KAAK,GAAG,IAAI,CAACF,YAAY,CAACG,UAAU,EAAE;IAC5C,IAAIa,GAAG,GAAG,6DAA6D,GAAGF,MAAM,GAAG,aAAa,GAACZ,KAAK;IACtG,IAAI,CAACH,UAAU,CAACQ,GAAG,CAACS,GAAG,EAAED,QAAQ,CAAC,CAACP,SAAS,CACxCC,QAAQ,IAAGC,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAEF,QAAQ,CAAC,EAE7DG,KAAK,IAAIF,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,KAAK,CAAC,CAC1C;EACL;EAEAK,cAAcA,CAACH,MAAa;IACxB,MAAMZ,KAAK,GAAG,IAAI,CAACF,YAAY,CAACG,UAAU,EAAE;IAC5C,IAAIa,GAAG,GAAG,6DAA6D,GAAGF,MAAM,GAAG,aAAa,GAACZ,KAAK;IACtG,IAAI,CAACH,UAAU,CAACmB,MAAM,CAACF,GAAG,CAAC,CAACR,SAAS,CACjCC,QAAQ,IAAGC,OAAO,CAACC,GAAG,CAAC,6BAA6B,GAAEF,QAAQ,CAAC,EAE/DG,KAAK,IAAIF,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,KAAK,CAAC,CAC1C;EACL;;AAvCSf,YAAY,C;mBAAZA,YAAY,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;AAAA;AAAZ3B,YAAY,C;SAAZA,YAAY;EAAA4B,OAAA,EAAZ5B,YAAY,CAAA6B;AAAA;SAAZ7B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}