{"ast":null,"code":"import { Employee } from './employee.componet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./employee-service.service\";\nclass DataServiceService {\n  constructor(serviceEmergentWondows) {\n    this.serviceEmergentWondows = serviceEmergentWondows;\n    this.employees = [new Employee(\"Juan\", \"Acevedo\", \"Fullstack\", 1500000), new Employee(\"Carlos\", \"Perez\", \"Backend\", 1300000), new Employee(\"Andrea\", \"Duarte\", \"Fullstack\", 1500000), new Employee(\"Laura\", \"Diaz\", \"Frontend\", 1400000)];\n  }\n  addEmployeeService(employee) {\n    this.serviceEmergentWondows.ShowMessage('Name: ' + employee.name + ' ' + employee.surname);\n    this.employees.unshift(employee);\n  }\n  findEmployee(indice) {\n    let employee = this.employees[indice];\n    return employee;\n  }\n}\nDataServiceService.ɵfac = function DataServiceService_Factory(t) {\n  return new (t || DataServiceService)(i0.ɵɵinject(i1.EmployeeServiceService));\n};\nDataServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataServiceService,\n  factory: DataServiceService.ɵfac,\n  providedIn: 'root'\n});\nexport { DataServiceService };","map":{"version":3,"names":["Employee","DataServiceService","constructor","serviceEmergentWondows","employees","addEmployeeService","employee","ShowMessage","name","surname","unshift","findEmployee","indice","i0","ɵɵinject","i1","EmployeeServiceService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Juan.acevedo\\Desktop\\Cursos\\Angular\\employeesApp\\src\\app\\data-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Employee } from './employee.componet';\nimport { EmployeeServiceService } from './employee-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n\n  constructor(private serviceEmergentWondows: EmployeeServiceService) {\n    \n\n  }\n\n  employees: Employee[]=[\n\n    new Employee(\"Juan\",\"Acevedo\",\"Fullstack\", 1500000),\n    new Employee(\"Carlos\",\"Perez\",\"Backend\", 1300000),\n    new Employee(\"Andrea\",\"Duarte\",\"Fullstack\", 1500000),\n    new Employee(\"Laura\",\"Diaz\",\"Frontend\", 1400000),\n  ];\n\n  addEmployeeService(employee:Employee){\n    this.serviceEmergentWondows.ShowMessage('Name: ' + employee.name + ' ' + employee.surname)\n    this.employees.unshift(employee);\n  }\n\n  findEmployee(indice:number){\n\n    let employee:Employee = this.employees[indice];\n    return employee;\n  }\n}\n"],"mappings":"AACA,SAASA,QAAQ,QAAQ,qBAAqB;;;AAG9C,MAGaC,kBAAkB;EAE7BC,YAAoBC,sBAA8C;IAA9C,KAAAA,sBAAsB,GAAtBA,sBAAsB;IAK1C,KAAAC,SAAS,GAAa,CAEpB,IAAIJ,QAAQ,CAAC,MAAM,EAAC,SAAS,EAAC,WAAW,EAAE,OAAO,CAAC,EACnD,IAAIA,QAAQ,CAAC,QAAQ,EAAC,OAAO,EAAC,SAAS,EAAE,OAAO,CAAC,EACjD,IAAIA,QAAQ,CAAC,QAAQ,EAAC,QAAQ,EAAC,WAAW,EAAE,OAAO,CAAC,EACpD,IAAIA,QAAQ,CAAC,OAAO,EAAC,MAAM,EAAC,UAAU,EAAE,OAAO,CAAC,CACjD;EARD;EAUAK,kBAAkBA,CAACC,QAAiB;IAClC,IAAI,CAACH,sBAAsB,CAACI,WAAW,CAAC,QAAQ,GAAGD,QAAQ,CAACE,IAAI,GAAG,GAAG,GAAGF,QAAQ,CAACG,OAAO,CAAC;IAC1F,IAAI,CAACL,SAAS,CAACM,OAAO,CAACJ,QAAQ,CAAC;EAClC;EAEAK,YAAYA,CAACC,MAAa;IAExB,IAAIN,QAAQ,GAAY,IAAI,CAACF,SAAS,CAACQ,MAAM,CAAC;IAC9C,OAAON,QAAQ;EACjB;;AAxBWL,kBAAkB,C;mBAAlBA,kBAAkB,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,sBAAA;AAAA;AAAlBf,kBAAkB,C;SAAlBA,kBAAkB;EAAAgB,OAAA,EAAlBhB,kBAAkB,CAAAiB,IAAA;EAAAC,UAAA,EAFjB;AAAM;SAEPlB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}