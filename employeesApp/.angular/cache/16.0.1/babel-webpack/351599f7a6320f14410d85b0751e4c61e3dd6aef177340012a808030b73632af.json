{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nclass LoginService {\n  constructor(router) {\n    this.router = router;\n  }\n  login(email, password) {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      firebase.auth().currentUser?.getIdToken().then(token => {\n        this.token = token;\n        this.router.navigate(['/']);\n      });\n    });\n  }\n  getIdToken() {\n    return this.token;\n  }\n  IsLogged() {\n    console.log(this.token);\n    return this.token;\n  }\n  Logout() {\n    firebase.auth().signOut().then(() => {\n      this.token = \"\";\n      this.router.navigate(['/']);\n    });\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.Router));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac\n});\nexport { LoginService };","map":{"version":3,"names":["firebase","LoginService","constructor","router","login","email","password","auth","signInWithEmailAndPassword","then","response","currentUser","getIdToken","token","navigate","IsLogged","console","log","Logout","signOut","i0","ɵɵinject","i1","Router","factory","ɵfac"],"sources":["C:\\Users\\Juan.acevedo\\Desktop\\Cursos\\Angular\\employeesApp\\src\\app\\login\\login.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\n\r\n@Injectable()\r\nexport class LoginService{\r\n\r\n    constructor(private router:Router){}\r\n\r\n    token:string;\r\n\r\n    login(email:string, password:string){\r\n        firebase.auth().signInWithEmailAndPassword(email,password).then(\r\n            response=>{\r\n                firebase.auth().currentUser?.getIdToken().then(\r\n                    token =>{\r\n                        this.token = token;\r\n                        this.router.navigate(['/']);\r\n                    }\r\n                )\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    getIdToken(){\r\n        return this.token;\r\n    }\r\n\r\n    IsLogged(){\r\n        console.log(this.token);\r\n        return this.token;\r\n    }\r\n\r\n    Logout(){\r\n        firebase.auth().signOut().then(()=>{\r\n            this.token = \"\";\r\n            this.router.navigate(['/']);\r\n        });\r\n    }\r\n\r\n}"],"mappings":"AAEA,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,sBAAsB;;;AAE7B,MACaC,YAAY;EAErBC,YAAoBC,MAAa;IAAb,KAAAA,MAAM,GAANA,MAAM;EAAS;EAInCC,KAAKA,CAACC,KAAY,EAAEC,QAAe;IAC/BN,QAAQ,CAACO,IAAI,EAAE,CAACC,0BAA0B,CAACH,KAAK,EAACC,QAAQ,CAAC,CAACG,IAAI,CAC3DC,QAAQ,IAAE;MACNV,QAAQ,CAACO,IAAI,EAAE,CAACI,WAAW,EAAEC,UAAU,EAAE,CAACH,IAAI,CAC1CI,KAAK,IAAG;QACJ,IAAI,CAACA,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC/B,CAAC,CACJ;IACL,CAAC,CACJ;EAEL;EAEAF,UAAUA,CAAA;IACN,OAAO,IAAI,CAACC,KAAK;EACrB;EAEAE,QAAQA,CAAA;IACJC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,KAAK,CAAC;IACvB,OAAO,IAAI,CAACA,KAAK;EACrB;EAEAK,MAAMA,CAAA;IACFlB,QAAQ,CAACO,IAAI,EAAE,CAACY,OAAO,EAAE,CAACV,IAAI,CAAC,MAAI;MAC/B,IAAI,CAACI,KAAK,GAAG,EAAE;MACf,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC,CAAC;EACN;;AAlCSb,YAAY,C;mBAAZA,YAAY,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAAZtB,YAAY,C;SAAZA,YAAY;EAAAuB,OAAA,EAAZvB,YAAY,CAAAwB;AAAA;SAAZxB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}